DROP PROCEDURE IF EXISTS `WSO2_FS_EVENT_NOTIFICATION_CLEANUP_DATA_RESTORE_SP`;
DELIMITER $$
CREATE PROCEDURE `WSO2_FS_EVENT_NOTIFICATION_CLEANUP_DATA_RESTORE_SP`()

BEGIN

DECLARE rowCount INT;
DECLARE enableLog BOOLEAN;
DECLARE logLevel VARCHAR(10);

-- ------------------------------------------
-- CONFIGURABLE ATTRIBUTES
-- ------------------------------------------
SET enableLog = TRUE; -- ENABLE LOGGING [DEFAULT : TRUE]
SET logLevel := 'TRACE'; -- SET LOG LEVELS : TRACE



IF (enableLog) THEN
SELECT  'CLEANUP DATA RESTORATION STARTED .... !';
END IF;


-- ---------------------

SELECT COUNT(1) INTO rowcount  FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA IN (SELECT DATABASE())  AND TABLE_NAME IN ('FS_NOTIFICATION');
IF (rowcount = 1)
THEN
IF (enableLog AND logLevel IN ('TRACE')) THEN
SELECT  'CLEANUP DATA RESTORATION STARTED ON FS_NOTIFICATION TABLE !';
END IF;
INSERT INTO FS_NOTIFICATION SELECT A.* FROM BAK_FS_NOTIFICATION A LEFT JOIN FS_NOTIFICATION B ON A.NOTIFICATION_ID = B.NOTIFICATION_ID WHERE B.NOTIFICATION_ID IS NULL;
SELECT row_count() INTO rowcount;
IF (enableLog ) THEN
SELECT  'CLEANUP DATA RESTORATION COMPLETED ON FS_NOTIFICATION WITH %',rowcount;
END IF;
END IF;

-- ---------------------

SELECT COUNT(1) INTO rowcount  FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA IN (SELECT DATABASE())  AND TABLE_NAME IN ('FS_NOTIFICATION_EVENT');
IF (rowcount = 1)
THEN
    IF (enableLog AND logLevel IN ('TRACE')) THEN
        SELECT  'CLEANUP DATA RESTORATION STARTED ON FS_NOTIFICATION_EVENT TABLE !';
    END IF;
    INSERT INTO FS_NOTIFICATION_EVENT SELECT A.* FROM BAK_FS_NOTIFICATION_EVENT A LEFT JOIN FS_NOTIFICATION_EVENT B ON A.NOTIFICATION_ID = B.NOTIFICATION_ID WHERE B.NOTIFICATION_ID IS NULL;
    SELECT row_count() INTO rowcount;
    IF (enableLog ) THEN
        SELECT  'CLEANUP DATA RESTORATION COMPLETED ON FS_NOTIFICATION_EVENT WITH %',rowcount;
    END IF;
END IF;

-- ---------------------

SELECT COUNT(1) INTO rowcount  FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA IN (SELECT DATABASE())  AND TABLE_NAME IN ('FS_NOTIFICATION_ERROR');
IF (rowcount = 1)
THEN
    IF (enableLog AND logLevel IN ('TRACE')) THEN
        SELECT  'CLEANUP DATA RESTORATION STARTED ON FS_NOTIFICATION_ERROR TABLE !';
    END IF;
    INSERT INTO FS_NOTIFICATION_ERROR SELECT A.* FROM BAK_FS_NOTIFICATION_ERROR A LEFT JOIN FS_NOTIFICATION_ERROR B ON A.NOTIFICATION_ID = B.NOTIFICATION_ID WHERE B.NOTIFICATION_ID IS NULL;
    SELECT row_count() INTO rowcount;
    IF (enableLog ) THEN
        SELECT  'CLEANUP DATA RESTORATION COMPLETED ON FS_NOTIFICATION_ERROR WITH %',rowcount;
    END IF;
END IF;

-- ---------------------

IF (enableLog) THEN
SELECT  'CLEANUP DATA RESTORATION COMPLETED .... !';
END IF;


END$$

DELIMITER ;
